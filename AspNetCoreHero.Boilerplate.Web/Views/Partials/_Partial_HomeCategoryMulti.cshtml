@using AspNetCoreHero.Boilerplate.Web.Extensions
@using AspNetCoreHero.Boilerplate.Web.Models
@model IEnumerable<ArticleViewModel>
@{
    var dataGroup = Model.GroupBy(x => x.CategoryId);
}

<section class="categories mixi" data-ref="container">
    <div class="container">
        <div class="section-title">
            <h2>@ViewData["Title"].ToString()</h2>
            <div class="category-box">
                <ul class="post-category">
                    @foreach (var item in dataGroup)
                    {
                        <li class="filter" data-filter=".@item.ToList().FirstOrDefault().ArticleCategory.Slug"><i class="icon-hotairballoon"></i> @item.ToList().FirstOrDefault().ArticleCategory.Title</li>
                    }
                </ul>
            </div>
        </div>
        @if (Model != null && Model.Count() > 0)
        {
            @foreach (var item in dataGroup)
            {
                var firstItem = item.FirstOrDefault(x => x.Image != null);
                var listSubitem = item.Where(x => x.Id != firstItem.Id).Take(3);
                <div class="row mix @item.ToList().FirstOrDefault().ArticleCategory.Slug">
                    <div class="col-sm-6" style="margin-bottom:20px;">
                         @await Html.PartialAsync("~/Views/Partials/_Partial_LargeImage.cshtml", firstItem)
                    </div>
                    <div class="col-sm-6">
                        @foreach (var subItem in listSubitem)
                        {
                            @await Html.PartialAsync("~/Views/Partials/_Partial_HomeArticleItem12.cshtml", subItem)
                        }

                    </div>
                </div>
            }
        }

    </div>
</section>