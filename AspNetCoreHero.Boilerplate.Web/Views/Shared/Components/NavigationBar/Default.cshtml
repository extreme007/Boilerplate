@using AspNetCoreHero.Boilerplate.Web.Models
@model IEnumerable<NavigationViewModel>
@{ 
    var currentUrl = Context.Request.Path;
}
@{
    async Task RenderChildren(IEnumerable<NavigationViewModel> listCategory)
    {
        foreach (NavigationViewModel item in listCategory)
        {
            if (Model.Where(x => x.ParentId == item.Id).Count() > 0)
            {
                IEnumerable<NavigationViewModel> childItems = Model.Where(x => x.ParentId == item.Id);
                <li>
                    @if (item.ParentId == null)
                    {
                        @*<a asp-controller="Category" asp-action="" asp-route-Id="@item.Id">@item.Title.ToUpper() <i class="fa fa-angle-down"></i></a>*@
                        <a href="/@item.Slug">@item.Title.ToUpper() <i class="fa fa-angle-down"></i></a>
                    }
                    else
                    {
                        @*<a asp-controller="Category" asp-action="" asp-route-Id="@item.Id">@item.Title.ToUpper()</a>*@
                        <a href="/@item.Slug">@item.Title.ToUpper()</a>
                    }
                    <ul class="sub-menu">
                        @{ await RenderChildren(childItems); }
                    </ul>
                </li>
            }
            else
            {
                @*<li is-active-route><a asp-controller="Category" asp-action="Index" asp-route-Id="@item.Id">@item.Title.ToUpper() </a></li>*@
                <li><a href="/@item.Slug">@item.Title.ToUpper() </a></li>
            }
        }
    }
}

<div class="navigation">
    <div class="container">
        <div class="navigation-content">
            <div class="header_menu">
                <!-- start Navbar (Header) -->
                <nav class="navbar navbar-default navbar-sticky-function navbar-arrow">
                    <div class="logo pull-left">
                        <a href="/"><img alt="tintin247" src="~/images/logo1.png"></a>
                    </div>
                    <div id="navbar" class="navbar-nav-wrapper pull-right">

                        @if (Model != null && Model.Count() > 0)
                        {
                            <ul class="nav navbar-nav" id="responsive-menu">
                                <li>
                                    <a href="/"> Home </a>
                                </li>
                                @{await RenderChildren(Model.Where(x => x.ParentId == null));}
                            </ul>
                        }

                        <a id="searchtoggl" class="searchtoggle"><i class="fa fa-search" aria-hidden="true"></i></a>
                    </div><!--/.nav-collapse -->
                    <div id="slicknav-mobile"></div>
                </nav>
            </div>
            <div id="searchbar" class="searchbar">
                <form>
                    <div class="form-group">
                        <input type="text" class="form-control" id="search" placeholder="Search Now">
                        <a href="#"><span class="search_btn"><i class="fa fa-search" aria-hidden="true"></i></span></a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>