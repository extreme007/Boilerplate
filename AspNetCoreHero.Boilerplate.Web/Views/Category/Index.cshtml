@using AspNetCoreHero.Boilerplate.Web.Views.Shared.Components.Sidebar;
@using AspNetCoreHero.Boilerplate.Web.Models
@using AspNetCoreHero.Boilerplate.Web.Views.Shared.Components.Breadcrumb;
@model ArticlePagingViewModel
@{
    Layout = "_Layout";
    var totalPages = Model.TotalPages;
}
@(await Component.InvokeAsync<BreadcrumbViewComponent>(new { parentId = Model.CategoryId, isArticle = false }))
<section class="blog-content">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-sm-12">
                @if (Model.Data != null && Model.Data.Count() > 0)
                {
                    var firstItem = Model.Data.Where(x => x.Image != null).FirstOrDefault();

                    <div class="item-large">
                        <div class="item-large-image">
                            <img alt="@firstItem.Title" src="@firstItem.Image">
                            <div class="image-overlay"></div>
                        </div>

                        <div class="item-large-content">
                            <h3><a href="@firstItem.FullSlug">@firstItem.Title</a></h3>
                            <p>@firstItem.Description</p>
                            <div class="author-detail">
                                @*<p><a href="#"><i class="icon-profile-male"></i> @top1.Author</a></p>*@
                                <p><i class="icon-clock"></i> @firstItem.PostedDatetimeString</p>
                                <p><a href="#"><i class="icon-chat"></i> @firstItem.CommentCount</a></p>
                            </div>
                            @*<div class="post-tag" style="margin-top:10px;">
                                    <a href="#" class="tag-gold tag">@top1.SourceName</a>
                                </div>*@
                        </div>
                    </div>
                    <div id="listArticle">
                        @await Html.PartialAsync("_Partial_ArticleItem.cshtml", Model.Data.Where(x => x.Id != firstItem.Id))
                    </div>
                    <div id="progressmarker"></div>
                }


                @*<div class="pagination">
                        <ul class="pagination">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                var isActive = Model.Page == i ? "active" : "";
                                <li><a href="/tin-moi?page=@i" class="@isActive">@i</a></li>
                            }

                        </ul>
                    </div>*@
            </div>
            <div class="col-md-4 col-sm-12">
                @(await Component.InvokeAsync<SidebarViewComponent>())
            </div>

        </div>
    </div>
</section>

@section Scripts{
    <script type="text/javascript">
    var pageIndex = 2;
    var isLoading = false;
        var totalPages = @totalPages;
        console.log(totalPages);
    $(document).ready(function () {
        //GetData();
        $(window).scroll(function () {
            if ($('#progressmarker').length > 0) {
                var hT = $('#progressmarker').offset().top,
                    hH = $('#progressmarker').outerHeight(),
                    wH = $(window).height(),
                    wS = $(this).scrollTop();

                if (wS > (hT + hH - wH)) {
                    GetData();
                }
            }
        });
    });

    function GetData() {
        if (isLoading === false && pageIndex <= totalPages) {
            $.ajax({
                type: 'GET',
                url: '/LoadMore' + window.location.pathname,
                data: { "page": pageIndex},
                success: function (html) {
                    $("#listArticle").append(html);
                    pageIndex++;
                },
                beforeSend: function () {
                    $(".loader").show();
                    isLoading = true;
                },
                complete: function () {
                    $(".loader").hide();
                    isLoading = false;
                },
                error: function (error) {
                    $(".loader").hide();
                    console.log(error);
                    isLoading = false;
                }
            });
        }
    }
    </script>

}
